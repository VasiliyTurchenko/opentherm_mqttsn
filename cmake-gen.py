#!/usr/bin/env python

# cmakegen.py
# (c) Aleksander Alekseev 2015
# http://eax.me/
# (c) Vasiliy Turchenko 2018

import sys
import os
import re
#import strings
from pathlib2 import Path

include_dirs = set()
source_files = set()
out_file_name = "sources_list.cmake"

def recursive_search(path):
    # print(path)
    ign_flag = 0
    ignore_file = Path(os.path.join(path, ".ignore"))
    if ignore_file.is_file():
	ign_flag = 1
	text_file.write("# ignored - " + path + "\n")
    # local set

    skip_node_flag = 0
    skip_node_file = Path(os.path.join(path, ".ignore_node"))
    if skip_node_file.is_file():
	skip_node_flag = 1
	text_file.write("# ignored directory and all subdirs - " + path + "\n")
	return None
    local_source_files = set()
    for file in os.listdir(path):
        if (file == ".") or (file == ".."):
            continue
        full_name = os.path.join(path, file)
        if os.path.isdir(full_name) and not os.path.islink(path):
            recursive_search(full_name)
	if ign_flag == 0:
	        if re.search("\\.(c|cpp|cxx)$", file) is not None:
        	    local_source_files.add(full_name)
#         	    local_source_files.add(file)
	        elif re.search("\\.(h|hpp)$", file) is not None:
        	    include_dirs.add(path)
    if len(local_source_files) != 0:
#	dir_var = "set(DIR_" + path + ")"
#	print(dir_var)
	path_g = path[skip_chars:]
	path_g = path_g.replace("/","_")
	path_g = path_g.replace("\\","_")
	group_name = "GROUP_" + path_g.upper()
	source_files.add(group_name)
	text_file.write("\nset(" + group_name + "\n")
	for fname in sorted(local_source_files):
	    fname = fname[skip_chars:].replace("\\", "/")
	    text_file.write("\t\t" + fname + "\n")
	text_file.write(")" + "\n")

if len(sys.argv) < 2:
    print("Usage " + sys.argv[0] + " <path>")
    sys.exit(1)

start_path = sys.argv[1]
skip_chars = len(start_path) + 1

project_name = "dummy_project"
if len(sys.argv) > 2:
	project_name = sys.argv[2]

output_file = Path(os.path.join(start_path, out_file_name))
if output_file.is_file():
	print("Warning! The file " + out_file_name + " already exists! Overwrite the existing file (y/n)?")
	if not sys.stdin.readline() == "y\n":
		print("Exiting witout any changes made.")
		exit()

#open and reset output file
text_file = open(str(output_file), "w+")

#print("cmake_minimum_required(VERSION 2.8)")
text_file.write("# autogenerated " + out_file_name + "for project("+ project_name + ")" + "\n")

recursive_search(start_path)

for dir in sorted(include_dirs):
    out_dir = dir[skip_chars:].replace("\\", "/")
    text_file.write("include_directories(" + out_dir + ")" + "\n")


#print("\nadd_executable(project_name")
text_file.write("\nset(LIST_OF_SOURCES" + "\n")
for group in sorted(source_files):
#    out_file = file[skip_chars:].replace("\\", "/")
    group = "${" + group + "}"
    text_file.write("\t\t" + group + "\n")
text_file.write(")" + "\n")
text_file.close()
